---
layout: post
title: "Последствия выступления на Railsclub'Ulsk"
date: 2012-12-18 16:13
comments: true
categories:
- конференции
---

В эту субботу 15 декабря я выступал в Ульяновске с докладом «Нетрадиционное использование Ruby и PostgreSQL». Несмотря
на несколько провокационное название, доклад был посвящен вполне обыденным вещам: о том, как использовать Ruby и
PostgreSQL не в web-проекте с Rails. Я рассказал о Ruby внутри Vim, hstore и PostgreSQL массивах внутри Rails (кстати,
hstore и ARRAY неоднократно упоминались на конференции, так что я был неоригинален), а самая забавная часть моего
доклада была посвящена несуществующей документоориентированной БД rmongo.rb. Видеозапись второго дня еще доступна на
[сайте Railsclub](http://railsclub.ru/stream), и я надеюсь, что и первый день скоро появится в общем доступе.

Исходные коды, которые связаны с докладом, я выложил на [Gist](https://gist.github.com/4327395), сам доклад я выложил на
[Slideshare](http://www.slideshare.net/evtuhovich/ruby-postgresql).

<!-- more -->

По семейным обстоятельствам я был на конференции только неполный первый день, так что часть докладов прошло мимо моего
внимания. Из того, что запомнилось, был доклад [Льва Валкина](http://lionet.livejournal.com/) о функциональном
программировании и [Андрея Руденко](https://twitter.com/prepor) об асинхронном исполнении кода в Ruby.

Касательно rmongo.rb хочется сказать пару слов. Конечно, это был троллинг, но все же основная цель, которую я ставил
перед собою, это заставить всех (и себя в том числе) еще раз задуматься над вопросом, как принимаются технические
решения. Какие критерии используются, как эти критерии выбираются, как проводится оценка того или иного программного
средства, кто принимает участие в оценке и кто делает окончательный выбор. Мое личное мнение, что не стоит пользоваться
для выбора критериями в духе «прикольно», «модно», «я слышал», особенно при внедрении какого-то нового программного
средства.

К несчастью, совсем консервативный подход к смене используемого ПО может привести к тому, что вы и ваша компания можете
заметно сильно отстать от рынка, а излишне прогрессивный подход может привести к тому, что вы будете тратить огромное
количество времени на поддержку нового инструмента, а не на вашу работу.

Единственно правильного ответа на все эти вопросы, конечно, быть не может, но если немного думать о будущем, то многих
стандартных проблем можно избежать.
