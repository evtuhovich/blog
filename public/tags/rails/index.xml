<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Записи с тегом: rails on Блог Ивана Евтуховича</title>
    <link>https://evtuhovich.ru/tags/rails/</link>
    <description>Recent content in Записи с тегом: rails on Блог Ивана Евтуховича</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Tue, 24 Apr 2012 21:39:00 +0000</lastBuildDate>
    <atom:link href="https://evtuhovich.ru/tags/rails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Изменение формата сессии при переходе с Rails 3.0 на 3.2</title>
      <link>https://evtuhovich.ru/blog/2012/04/24/flash-message/</link>
      <pubDate>Tue, 24 Apr 2012 21:39:00 +0000</pubDate>
      <guid>https://evtuhovich.ru/blog/2012/04/24/flash-message/</guid>
      <description>&lt;p&gt;Групон сейчас активно переводится с rails 3.0 на rails 3.2. Самая досадная неожиданность, которая встретилась в процессе&#xA;переезда — это изменение формата хранения flash сообщений в сессии. Если бы при этом flash сообщение пропадало, то это&#xA;было бы не страшно, но при декодировании сессии происходит исключение, и пользователь видит 500 ошибку до тех пор, пока&#xA;не почистит куки. Конечно, пользователей, у которых в сессии будет flash сообщение в момент переключения с версии 3.0 на&#xA;3.2 будет не так и много, но это пользователи, потерянные навсегда.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Обновление на rails3 и проблемы, связанные с этим</title>
      <link>https://evtuhovich.ru/blog/2012/03/23/rails-update/</link>
      <pubDate>Fri, 23 Mar 2012 15:19:00 +0000</pubDate>
      <guid>https://evtuhovich.ru/blog/2012/03/23/rails-update/</guid>
      <description>&lt;p&gt;На «Групоне» мы давно уже переходим с Rails 2.3 на Rails 3.0. На этой неделе перешли — полет нормальный. Но поскольку&#xA;сразу переход у нас не получился, то мы переходили по частям. И тут возникла проблема, что в rails3 нужен новый devise (1.5.3),&#xA;которому нужен warden (1.1.1). А в rails2 используется devise (1.0.9), которому нужен warden (0.10.7). И вот этот вот&#xA;warden стал по-другому сериализовать сессию. А devise стал хранить remember_token в подписанной (signed) cookie. Более&#xA;того, из самих рельс пропал класс ActionController::Flash::FlashHash, поэтому при десериализации сессии происходило&#xA;неуловимое исключение в Marshal.load.&lt;/p&gt;&#xA;&lt;p&gt;Все эти проблемы решены были кодом, которые приведен ниже. И еще похожий код был в rails2-ветке, который конвертил&#xA;сессию третьих рельс во вторую. Пользуйтесь с осторожностью.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Проблемы с find_in_batches</title>
      <link>https://evtuhovich.ru/blog/2011/09/11/find-in-batches/</link>
      <pubDate>Sun, 11 Sep 2011 00:22:00 +0000</pubDate>
      <guid>https://evtuhovich.ru/blog/2011/09/11/find-in-batches/</guid>
      <description>Иногда мне кажется, что большинство инженерных историй похожи как две капли воды. Вот и эта история началась с того, что в одном большом отчете цифры не сходились раза в два.&#xA;Мысленно закурив трубку, как Шерлок Холмс, я взялся за дело. Вот таким образом выглядела модель, по которой считались цифры (я опускаю ненужные подробности).&#xA;class OfferDescription &amp;lt; ActiveRecord::Base has_many :children, :class_name =&amp;gt; &amp;#39;OfferDescription&amp;#39;, :foreign_key =&amp;gt; :parent_id end В отчете данные группировались по родительским объектам OfferDescription.</description>
    </item>
    <item>
      <title>Некоторые проблемы с cached_action в Rails 2.3</title>
      <link>https://evtuhovich.ru/blog/2011/08/22/caches-action/</link>
      <pubDate>Mon, 22 Aug 2011 13:02:00 +0000</pubDate>
      <guid>https://evtuhovich.ru/blog/2011/08/22/caches-action/</guid>
      <description>На Групоне у нас есть внутренняя страница, на которой динамически отображаются данные о продажах по различным городам. Результаты этой страницы зависят от параметров, которые передаются в метод show. А потом эта страница динамически обновляется с помощью ajax-запросов.&#xA;# dashboard.rb class Admin::DashboardsController &amp;lt; Admin::BaseController layout &amp;#34;admin&amp;#34; def show # Здесь сложные-сложные запросы к БД if request.xhr? render &amp;#39;show&amp;#39;, :layout =&amp;gt; false end end end Поскольку запросы очень тяжелые, да и сама страничка непростая, то отдача ее сильно нагружала БД и app-сервера.</description>
    </item>
    <item>
      <title>Переопределение Rails.logger и проблемы с ним</title>
      <link>https://evtuhovich.ru/blog/2010/07/27/rails-logger/</link>
      <pubDate>Tue, 27 Jul 2010 22:52:00 +0000</pubDate>
      <guid>https://evtuhovich.ru/blog/2010/07/27/rails-logger/</guid>
      <description>Часто один и тот же rails-проект используется и для web-части, и для каких-то других задач, выполняемых по расписанию или для создания демонов. В таких случаях иногда хочется, чтобы логи разных частей писались в разные файлы.&#xA;Готового способа для этого я не нашел. Например, посмотрим на такой пример:&#xA;$ ./script/console Loading development environment (Rails 2.3.5) &amp;gt;&amp;gt; ActiveRecord::Base.logger = Logger.new(STDOUT) =&amp;gt; #&amp;amp;lt;Logger:0xb192594 @progname=nil, @level=0, @default_formatter=#&amp;amp;lt;Logger::Formatter:0xb19255c @datetime_format=nil&amp;gt;, formatternil, logdev#&amp;amp;lt;Logger::LogDevice:0xb19247c @shift_size=nil, @shift_age=nil, @filename=nil, @dev=#&amp;amp;lt;IO:&amp;amp;lt;STDOUT&amp;gt;, mutex#&amp;amp;lt;Logger::LogDevice::LogDeviceMutex:0xb192444 @mon_owner=nil, @mon_count=0, @mon_mutex=#&amp;amp;lt;Mutex:0xb19240c&amp;gt; &amp;gt;&amp;gt; User.</description>
    </item>
    <item>
      <title>PgQ и Londiste</title>
      <link>https://evtuhovich.ru/blog/2009/06/05/pgq-londiste-plugin/</link>
      <pubDate>Fri, 05 Jun 2009 12:34:00 +0000</pubDate>
      <guid>https://evtuhovich.ru/blog/2009/06/05/pgq-londiste-plugin/</guid>
      <description>Хотя я так и не написал толком, как пользоваться PgQ и Londiste, но уже написал плагин, который облегчает его использование вместе с рельсами.&#xA;http://github.com/evtuhovich/pgq/tree/master&#xA;В README всё написано на плохом английском (с хорошим английским у меня плохо).&#xA;Совсем скоро я добавлю туда возможность прогонять миграции на master и slave базах данных одновременно. Тогда при очередной выкатке необходимо будет сделать только rake londiste:update в самом конце, после того, как все миграции прогонятся.</description>
    </item>
    <item>
      <title>Проблема с проверкой уникальности какого-то поля в rails</title>
      <link>https://evtuhovich.ru/blog/2009/05/28/validates-uniqueness-of/</link>
      <pubDate>Thu, 28 May 2009 22:22:00 +0000</pubDate>
      <guid>https://evtuhovich.ru/blog/2009/05/28/validates-uniqueness-of/</guid>
      <description>Пусть в модели User у нас описана валидация для поля email&#xA;validates_uniqueness_of :email, :case_sensitive =&amp;gt; false, :message =&amp;gt; i18n_proxy(:email_already_registered) Следующий код генерирует вот такой запрос к базе данных:&#xA;SELECT * FROM users WHERE lower(email) = &amp;#39;thmth&amp;#39; LIMIT 1 А на таблице users у нас индекс по полю email. В postgresql запрос, что вверху, не будет использовать индекс. Представьте, что будет, когда в таблице users десятки тысяч записей, а на каждое изменение любого поля в users вызывается такой запрос.</description>
    </item>
    <item>
      <title>Тесты и тестирование</title>
      <link>https://evtuhovich.ru/blog/2009/03/23/test-and-testing/</link>
      <pubDate>Mon, 23 Mar 2009 19:06:00 +0000</pubDate>
      <guid>https://evtuhovich.ru/blog/2009/03/23/test-and-testing/</guid>
      <description>Возможно, в сайте из 3 контроллеров и 15 страниц, тесты и не нужны. Я обычно не делаю тесты на маленьких проектах, которые пишу один.&#xA;В случае, если проект собирается быть большим, длиться долго, а команда состоит больше чем из одного человека, то тесты — крайне желательный инструмент для того, чтобы разработка не вышла из под контроля. Без тестов в какой-то момент невозможно внести серьезное изменение в код, потому что знаешь, что такое изменение заденет еще некоторые части и точно знаешь, что все зависимости точно не учтешь.</description>
    </item>
    <item>
      <title>Проблемы с кэшированием</title>
      <link>https://evtuhovich.ru/blog/2009/03/22/cache-problem/</link>
      <pubDate>Sun, 22 Mar 2009 13:18:00 +0000</pubDate>
      <guid>https://evtuhovich.ru/blog/2009/03/22/cache-problem/</guid>
      <description>Все ситуации, о которых я здесь пишу, встретились мне в повседневной работе. Единственное, что я делаю — меняю название классов, чтобы не утруждать моего читателя незнакомой для него предметной областью.&#xA;Итак, у нас есть следующие модели:&#xA;# shop.rb class Shop &amp;lt; ActiveRecord::Base has_many :categories cached_methods do def wait_orders_count Order.count :conditions =&amp;gt; {:status_id =&amp;gt; Order::WAIT} end def paid_orders_count Order.count :conditions =&amp;gt; {:status_id =&amp;gt; Order::PAID} end def bad_orders_count Order.count :conditions =&amp;gt; {:status_id =&amp;gt; Order::BAD} end end end class Category &amp;lt; ActiveRecord::Base belongs_to :shop has_many :products end class Product &amp;lt; ActiveRecord::Base belongs_to :category has_many :orders end class Order belongs_to :product end Методы внутри cached_methods выполняются в том случае, если значение для них не нашлось в кэше (например, в memcached).</description>
    </item>
    <item>
      <title>PosgtreSql, миграции и огромные таблицы</title>
      <link>https://evtuhovich.ru/blog/2009/03/20/big-tables/</link>
      <pubDate>Fri, 20 Mar 2009 12:34:00 +0000</pubDate>
      <guid>https://evtuhovich.ru/blog/2009/03/20/big-tables/</guid>
      <description>Миграции в rails — это очень правильный инструмент. Правда, иногда случаются казусы, потому что конкретная БД перестает быть «сферическим конем в вакууме», как только количество данных и нагрузка на нее становится существенной.&#xA;Пусть у нас есть таблица posts, в которой 10 миллионов записей. И мы решили добавить в нее поле is_searchable.&#xA;$ script/generate migration add_is_searchable_to_posts class AddIsSearchableToPosts &amp;lt; ActiveRecord::Migration def self.up add_column :posts, :is_searchable, :boolean, :default =&amp;gt; true, :null =&amp;gt; false end def self.</description>
    </item>
  </channel>
</rss>
