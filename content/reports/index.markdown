---
title: "Доклады и мастер-классы"
date: 2018-11-25T16:14:00
comments: true
sharing: true
footer: true
blog: blog
---

Ниже представлен наиболее полный список докладов и мастер-классов, который я читал в обратном хронологическом порядке.

# <a id="reports2018"></a>2018

## <a id="pipeline_borders"></a> DevOps и бизнес: границы конвейера поставки ПО

Часто DevOps пытаются внедрить только в рамках IT-департамента или, хуже того, в рамках отдела по разработке ПО. Как
показывает наш опыт, такой подход забирает много ресурсов, но дает лишь незначительные улучшения в скорости поставки,
качестве ПО и других нефункциональных характеристиках. В рамках доклада мы постараемся сделать еще один шаг «наверх»,
чтобы посмотреть на процесс поставки ПО из рамки всей организации и обсудим, что можно сделать, чтобы внедрение DevOps
не становилось карго-культом. Чтобы все это не было скучно, доклад наполнен увлекательными примерами из опыта
консалтинга «Экспресс 42».

Доклад читался в Москве на конференции [DevOpsPro](https://www.devopspro.ru/)


# <a id="reports2017"></a>2017

## <a id="instruments_not"></a> Почему инструментов недостаточно для полного DevOps

Многие крупные компании хотят купить себе DevOps, как раньше покупали БД, сервера приложений, платформы, а иногда даже и
приватные облака. Но как показывает наша практика, сами по себе инструменты ничего не меняют внутри организации, потому
что DevOps должен пронизывать весь процесс поставки, от идеи и до работающего в бою кода. И хотя нельзя отвергать
важность инструментов (про которые мы тоже поговорим), смена культуры организации, возможность проводить организационные
изменения играют гораздо более важную роль. Цифровая трансформация началась, я расскажу о том, как она проходит в
российских корпорациях - наших клиентах.

Доклад читался в Москве на конференции [DevOpsPro](https://www.devopspro.ru/)

## <a id="sw_delivery"></a> Поставка ПО в 2017 году

Как должна выглядеть типовая схема поставки ПО в 2017 году, почему DevOps окончательно победит совсем скоро, какие
компетенции надо наращивать и какие практики ставить прямо сегодня, чтобы попасть в светлое завтра и не остаться на
обочине истории. Я расскажу об этом с примерами из жизни наших клиентов. 

Доклад читался в Томске на концеренции [Город ИТ](http://gorod.it/).


## <a id="agile_devops"></a> Agile, DevOps и другие инструменты цифровизации

Мир все больше становится "цифровым", а значит, существенно сокращается время на обработку информации и принятие
взвешенных решений, что требует организации эффективного взаимодействия всех субъектов жизненного цикла
бизнес-приложений. Однако, в условиях традиционной экономики бизнес-подразделения, разработчики и служба эксплуатации
обычно работали изолированно. Теоретически Agile, философия DevOps и ITIL позволяют разрушить стену между бизнесом и ИТ,
но на практике возникает масса вопросов по особенностям применения этих инструментов. Как следствие, сегодня, например
по DevOps, консультируют уже даже специалисты из большой тройки. В докладе разбирается опыт российских компаний,
применяющих DevOps, Agile, ITIL и Lean для создания платформы непрерывного развертывания приложений, позволяющих бизнесу
не только оперативно реагировать на запросы рынка, но и формировать его.

Доклад читался на конференции [Agile, DevOps и ITIL – инструменты цифровизации](https://www.osp.ru/iz/agiledevopsitil2017#forum).
Презентация [здесь](https://www.osp.ru/netcat_files/userfiles/Devops_2017/Evtukhovich_devops.pdf)

## <a id="is_devops_possible"></a> Возможен ли DevOps в Enterprise

В процессе работы с клиентами компании «Экспресс 42» по внедрению практик и инструментов DevOps нами был накоплен опыт,
которым хотелось бы поделиться. В докладе будет кратко рассказано, что мы понимаем под термином DevOps, а также
продемонстрированы кейсы из практики работы с крупными российскими компаниями.  

Доклад читался на [ITMF 2017](http://ospcon.osp.ru/page612442.html#Evtukhovich).

## <a id="key_devops_practices"></a> Key DevOps Practices

In our job as DevOps consultants, we are frequently asked a question by our clients: “What does DevOps consist of?”
Acronym CAMS is not suitable enough to make DevOps sell, because nobody wants to buy “culture” and “knowledge sharing”.
So we recommend to our clients the following practices: Infrastructure As a Code, Continuous Delivery, Continuous
Monitoring, Test Data Management and Automated Testing. In my presentation, I will talk about what we mean by those
practices and also tell some of the cases of our work with the big Russian enterprises.

Ит воз май фест паблик талк ин Инглиш, я выступал в [Вильнюсе на DevOpsPro](http://devopspro.lt/).

Тот же доклад, но уже на русском языке, читался на [конференции Стачка в 2017 году](https://nastachku.ru/klyuchevye-devops-praktiki).

# <a id="reports2016"></a>2016

## <a id="devops_tools_history"></a> Развитие DevOps/NoOps инструментов. Что было, что есть, что будет

Скорость внесения изменений в продукты становится все более важной с каждым днем. Подход DevOps появился, как попытка
ответить на этот вызов. Я расскажу, что же такое DevOps, как соотносится с NoOps, как их внедрение влияет на разработку,
тестирование и эксплуатацию и к чему готовиться тестировщикам в самом ближайшем будущем.

Доклад читался на конференции [SQA Days в Минске в ноябре 2016](http://sqadays.com/ru/talk/43556).

## <a id="microservices"></a>Микросервисы: откуда столько шума?

В последнее время только ленивый не пишет о микросервисной архитектуре. Но почему вдруг этот достаточно очевидный способ
организации ИТ-проектов стал так популярен?

В докладе пойдет речь о том, что такое микросервисная архитектуры, об ее принципах и устройстве и преимуществах, которые
она предоставляет, будет рассказано об основных компонентах, которые она включает в себя. Также будет дан краткий
экскурс в контейнеры и Docker в разрезе их использования в микросервисной архитектуре.

Но любые преимущества не бывают бесплатными, также в докладе пойдет речь о том, какие недостатки несет в себе данный
подход.

Доклад читался на конференции [DevOpsPro](http://www.devopspro.ru/2016/ivan-evtukhovich/?lang=ru), и в несколько
измененном формате на конференции [Youcon в Саратове](http://2016.youcon.ru/#about).

## <a id="devops_to_noops"></a>Эксплуатация завтрашнего дня: от DevOps к NoOps

За последние годы у ИТ-сообщества накопился опыт использования систем управления конфигурацией и работой в организации
по методологии DevOps. Но растущие вызовы показывают, что и этот подход имеет свои недостатки. Доклад расскажет о том,
какие контейнеры бывают и почему они победят, что придет на смену облакам, и какие практики стоит начать внедрять
сегодня, чтобы завтра не остаться без работы.

Доклад читался на конференции «SECON» 22 апреля 2016 года, слайды и видео [здесь](http://2016.secon.ru/speakers/31).

# <a id="reports2015"></a>2015

## <a id="devops_confmgmt"></a>DevOps и системы управления конфигурацией

Обзорный доклад, который рассказывает о том, что такое DevOps, какие практики относятся к DevOps и почему это важно. Так
же, на примере двух систем - ansible и chef, рассказывается о том, что такое системы управления конфигурацией, зачем они
нужны и какие задачи помогают решить.

Доклад читался на конференции «[SECON](http://2015.secon.ru/program/technology-1/95)» 24 апреля 2015 года, слайды можно
найти [здесь](http://www.slideshare.net/evtuhovich/devops-secon-2015), видео [здесь](https://www.youtube.com/watch?t=78&v=0fTK7_vZZEI).

## <a id="confmgmt"></a>Куда движется управление инфраструктурой

Это обзорный доклад о том, что происходит в DevOps-мире сегодня. В нем будут описаны основные идеи подхода
"Инфраструктура как код". Так же будет рассказано о современном стеке технологий, используемом для реализации этого
подхода, а именно: Chef/Ansible, Vagrant, Packer. 

Доклад читался на конференции «[На Стачку](http://nastachku.ru/lectures#lecture_154)» 13 апреля 2014 года, слайды можно
найти [здесь](http://www.slideshare.net/evtuhovich/nastachku-33507860).

## <a id="librarian"></a>Повторяемость для котиков: библиотекарь и книжная полка

Поговорим о проблемах командного изменения конфигурации, а также управления версиями и зависимостями сторонних библиотек
(в терминах Chef — кукбуков):

* где хранить сторонние кукбуки;
* как сделать, чтобы у всех инженеров был одинаковый «срез» конфигурации;
* как обновлять свои и сторонние кукбуки с учетом их зависимостей.

В докладе описаны два современных инструмента для решения этих проблем: librarian-chef и Berkshelf. Мы сравним их,
разберем сильные и слабые стороны, особенности интеграции с системой создания окружений Vagrant. Также посмотрим на
практики использования этих инструментов, выработанные в компании «Экспресс 42».

Доклад прочитан 25 января 2014 года на [DevOps митапе в Яндексе](http://tech.yandex.ru/events/yagosti/devops/),
[слайды](http://www.slideshare.net/evtuhovich/2014-01-yandex) и
[видео](http://tech.yandex.ru/events/yagosti/devops/talks/1597/).

## <a id="continuousdelivery"></a>Continuous Delivery. Как перестать релизиться и начать жить

Если

* каждый ваш релиз — это головная боль и бессонная ночь;
* системные администраторы показывают пальцем на программистов, а программисты на сисадминов, но все равно ничего не работает;
* поменять что-то на боевых серверах так, чтобы ничего не упало, практически невозможно.

Тогда этот доклад — для вас.

Этот доклад расскажет про:

* основные инженерные практики, которые позволяют сделать процесс внесения изменений в уже существующий проект более дешевым и быстрым;
* интеграцию каждого комита сразу после попадания в систему контроля версий;
* алгоритм запуска циклов обратной связи на самых ранних стадиях, когда вносить изменения и править ошибки дешевле всего;
* описание процесса, как сделать время попаданий изменений в «бой» минимальным.

Весь доклад подкреплен реальными историями из личного опыта автора.

Опыт консультирования в компании „Экспресс 42“ показывает, что использование современных подходов в разработке
IT-проектов — достаточно редкая практика. Зачастую многие программные инструменты используются без понимания, зачем это
нужно, просто из любопытства или шумихи вокруг них. Данный доклад призван это исправить.

Продолжительность доклада 45-60 минут. Доклад читался на [конференции SECON в Пензе](http://2013.secon.ru/) в 2013 году,
[слайды можно найти здесь](http://www.slideshare.net/evtuhovich/continuousdelivery).

## <a id="rmongorb"></a>Нетрадиционное использование Ruby и PostgreSQL
Слегка несерьезный доклад о том, как использовать язык Ruby не для разработки Web-приложений. Доклад состоит
из трех частей.

Первая часть рассказывает о том, как можно использовать Ruby внутри редактора Vim. Рассказывается о возможностях
интеграции и ее ограничениях, а также рассказывается о том, как рисовать ковер Серпинского.

Вторая часть рассказывает о том, как можно использовать нестандартные типы PostgreSQL hstore и array внутри Ruby
приложения с использованием библиотеки ActiveRecord.

Третья часть доклада рассказывает и показывает, как, используя язык ruby (а именно pl/ruby), yaml как формат хранения данных и
PostgreSQL, создать rmongo.rb – NoSQL базу данных с интерфейсом, практически полностью идентичным MongoDB.

Продолжительность доклада 25 минут. Доклад читался на конференции Railsclub'Ulsk в Ульяновске в 2012 году, слайды лежат
[здесь](http://www.slideshare.net/evtuhovich/ruby-postgresql).

## <a id="grpn"></a>Как мы делали Групон
В докладе рассказывается о том, как сотрудники EvilMartians делали сайт groupon.ru. Рассказывается об
архитектуре проекта, о его внутреннем устройстве, о типичных проблемах, с которыми пришлось столкнуться. Также 
освещаются вопросы организации командной работы, управления конфигурацией, выкатки. Обзорно рассказывается о
Open Source проектах, которые были выпущены в процессе создания http://groupon.ru.

В архитектуре проекта описывается внутреннее устройство сайта groupon.ru, используемые программные продукты (nginx,
debian, ruby, rails, postgresql, memcached) и особенности их настройки.

В типичных проблемах я расскажу 3-5 интересных случая из разработки групона: какая проблема возникла и как мы ее решали.

Также я расскажу о том, как устроена команда, как происходит процесс управления разработкой, как мы тестируем, релизимся
и какие инструменты для этого используем.

В части про управление конфигурацией я расскажу о том, с какими проблемами администрирования мы сталкивались, почему и
как мы переехали на систему управления конфигурацией (opscode chef). Также я расскажу о том, как происходят выкатки с
помощью capistrano.

В последней части я расскажу о библиотеках, которые была написаны и отданы в OpenSource в процессе
создания групона. Это zendesk, gon, cupid, visibility.js, role.

Доклад читался 2 раза — на конференции [Toster](http://toster.ru/conferences/10-02-2012-ruby/results) в Москве в 2012
году и на конференции [CodeFest](http://www.youtube.com/watch?v=s5HcEAR6THQ) в Новосибирске в 2012 году, слегка
измененным для аудитории, незнакомой с языком Ruby.

## <a id="vimordie"></a>Vim Or Die

Доклад об одном из самых мощных современных текстовых редакторах — Vim. В докладе расскрываются самые важные базовые
возможности Vim, а также описываются популярные плагины для Vim, которые делают работу с этим редактором еще более
эффективной.

Доклад читался один раз в 2010 году на конференции [Railsclub](http://railsclub.ru), вызвал бурю эмоций и новую волну
священных войн. [Слайды можно посмотреть на Slideshare](http://www.slideshare.net/evtuhovich/vim-or-die), а
видео доклада лежит [здесь](http://univertv.ru/video/informatika/programmirovanie/ruby_on_rails_moscow/vim_or_die/).
